

unit_map:
- 1
- 2
- 5
- 10
- 20
- 50
- 100

group_count:
  tiny: 100000
  small: 10000
  big: 10

scenario:echo,transport:Websockets:
  normal_connection: [1000, 2000, 5000, 10000, 20000, 50000, 100000]
  max_connection: [1500, 3000, 7500, 15000, 30000, 75000, 150000]
  base_step: [1000, 2000, 5000, 5000, 5000, 5000, 5000]
  step: [500, 1000, 2500, 5000, 5000, 5000, 5000]
  step_length: [5, 5, 5, 10000, 100000, 100000, 10000000]
  concurrent: [100, 100, 100, 200, 200, 200, 200]


#scenario:broadcast,transport:Websockets:
#  normal_connection: [1000, 2000, 3000, 4000]
#  max_connection: [1500, 2500, 3500, 4500]
#  base_step: [1,2,2,4]
#  step: [1,2,5,4]
#  step_length: [1,2,3,4]
#  concurrent: [100,100,100,100]
#
#
#scenario:sendToClient,transport:Longpolling,protocol:json,message_size:2048:
#  normal_connection: [1000, 2000, 3000, 4000]
#  max_connection: [1500, 2500, 3500, 4500]
#  base_step: [3000,3000,1000,3000]
#  step: [1000,2000,3000,4000]
#  step_length: [1,2,3,4]
#  concurrent: [100,100,100,100]
#
#
#scenario:sendToGroup,transport:Websockets,group:tiny:
#  normal_connection: [1000, 2000, 3000, 4000]
#  max_connection: [1500, 2500, 10000, 4500]
#  base_step: [3000,3000,10000,3000]
#  step: [1000,2000,10000,4000]
#  step_length: [1,2,3,4]
#  concurrent: [100,100,100,100]
#
#
#scenario:frequentJoinLeaveGroup,transport:Websockets,group:tiny:
#  normal_connection: [1000, 2000, 3000, 4000]
#  max_connection: [1500, 2500, 10000, 4500]
#  base_step: [3000,3000,10000,3000]
#  step: [1000,2000,10000,4000]
#  step_length: [1,2,3,4]
#  concurrent: [100,100,100,100]
#
#scenario:sendToGroup,transport:Websockets,group:small:
#  normal_connection: [1000, 2000, 3000, 4000]
#  max_connection: [1500, 2500, 10000, 4500]
#  base_step: [3000,3000,10000,3000]
#  step: [1000,2000,10000,4000]
#  step_length: [1,2,3,4]
#  concurrent: [100,100,100,100]
#
#scenario:sendToGroup,transport:Websockets,group:big:
#  normal_connection: [1000, 2000, 3000, 4000]
#  max_connection: [1500, 2500, 10000, 4500]
#  base_step: [3000,3000,10000,3000]
#  step: [1000,2000,10000,4000]
#  step_length: [1,2,3,4]
#  concurrent: [100,100,100,100]