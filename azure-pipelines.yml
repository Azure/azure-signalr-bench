# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  name: VSEng-MicroBuildVS2019
  demands:
  - Cmd
  - msbuild

variables:
  solution: '*.sln'
  BuildPlatform: 'Any CPU'
  BuildConfiguration: 'Release'
  MSBuildArguments: '/p:Configuration=$(BuildConfiguration) /p:EnableSigning=true /p:BuildNumber=$(BuildNumber)'

steps:
- task: NuGetCommand@2
  displayName: 'Restore Microbuild'
  inputs:
    restoreSolution: build/microbuild.proj
    vstsFeed: '6a2d6fd3-0b16-40f0-b309-7175c4e86490'

- task: CmdLine@2
  displayName: 'List all local files and directories'
  inputs:
    script: 'dir'

- task: CmdLine@2
  displayName: 'Check variables'
  inputs:
    script: 'echo $(buildcounter)'

- task: CmdLine@2
  displayName: 'Clean artifacts'
  inputs:
    script: 'if exist artifacts del /s /q artifacts'

- task: CmdLine@2
  displayName: 'Clean local nuget'
  inputs:
    script: 'if exist .nuget del /s /q .nuget'

- task: CmdLine@2
  displayName: 'Clean local obj'
  inputs:
    script: 'if exist obj del /s /q obj'

- task: MicroBuildSigningPlugin@2
  displayName: 'Install Signing Plugin'
  inputs:
    signType: '$(SignType)'
  condition: and(succeeded(), in(variables.SignType, 'real', 'test'))

- task: BatchScript@1
  inputs:
    filename: 'build.bat'
    arguments: '$(MSBuildArguments)'

- task: MSBuild@1
  displayName: Sign
  inputs:
    solution: build/sign.proj
    msbuildVersion: '15.0'
    msbuildArchitecture: x64
    configuration: '$(BuildConfiguration)'
    msbuildArguments: '/t:SignPackages'
  enabled: false


- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'artifacts/build'
    ArtifactName: Artifacts
